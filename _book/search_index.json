[
["index.html", "Building a website using blogdown in R Summary", " Building a website using blogdown in R Alistair Bailey May 16 2018 Summary These are my instructions for how to build a website using R. The inspiration came from a series of tweets by Dan Qunitana about how to build an academic website using the blogdown package (Xie 2018). Following these instructions you can build a website for Bibi the Cat, using the Hugo academic theme but you can of course make a website for anything you like and use any of the many themes available. These instructions assume you have R (R Core Team 2018) and Rstudio installed and are reasonably comfortable using these tools. For much more detail check out the fantastic blogdown book. Automating deployment with GitHub "],
["getting-started.html", "1 Getting started 1.1 Installation 1.2 Installing JabRef", " 1 Getting started 1.1 Installation First you’ll need to install the blogdown package: install.packages(&quot;blogdown&quot;) Then use blogdown to install the static site generator Hugo: blogdown::install_hugo() 1.2 Installing JabRef If you are going to link academic publications on your website you will probably find it useful to have JabRef installed to create the necessary files you need. JabRef is an open source bibliography reference manager. This is not the only way to do things, but it’s what I’m familiar with and is free. See the publications section for the full details. "],
["creating-and-deploying-an-initial-website.html", "2 Creating and deploying an initial website 2.1 Creating a website in R 2.2 Deployment", " 2 Creating and deploying an initial website 2.1 Creating a website in R We’re going to create a website for Bibi the Cat aka The Tiny Tiger. Here she is: Figure 2.1: Bibi the Cat Go to File &gt; New Project &gt; New directory and then scroll down and choose Website using blogdown. This will then take you to the another screen where you can choose the directory for the website and we choose the theme. Given Bibi’s interests in rheology we’ll be using the hugo-academic theme, this is selected by entering gchusen/hugo-academic in the box as shown in Figure 2.2 Figure 2.2: Create a new directory with a suitable name with no spaces and choose a theme, here we’re using gchusen/hugo-academic. Then Create Project and it should download the necessary files, change the working directory to the one created and you should see something like this: Figure 2.3: (ref:rstudio-web) There are a bunch of folders and files, and the script editor pane is open with the confog.toml file open for editing. As example files are provided we can build a website immediately using: blogdown::serve_site() And we should see the example site open in the Viewer pane. 2.2 Deployment The simplest way to delpoy our website is to use netlify. Create and account or connect via another account such as GitHub and then from the Sites tab that should appear if you click on your name, drag and drop the public folder from the directory into the box like so: Assuming that goes ok, you’ll then see a randomly generated name for your new site. Click on Site settings to change the name to whatever you wish. You should see the option to change the name like so. Click and follow the instructions. Click on your name to get back to Sites and then click on the name of your website to view it. Congratulations, you’ve created and deployed a website. Next, we’ll go back into R to learn how to change the content. "],
["adding-content-to-the-site.html", "3 Adding content to the site", " 3 Adding content to the site "],
["creating-publication-files.html", "4 Creating publication files", " 4 Creating publication files "],
["automating-deployment-with-github.html", "5 Automating deployment with GitHub", " 5 Automating deployment with GitHub "]
]
